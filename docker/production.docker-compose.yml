version: '3'

services:
  web:
    build:
      context: ".."
      dockerfile: docker/web.dockerfile
    restart: always
    depends_on:
      - postgres
      - redis
    env_file:
      - ../.env
    command: poetry run waitress-serve --port 80 app:app
    environment:
      - "AWI_TEST_MODE=${AWI_TEST_MODE}"

  runner:
    build:
      context: ".."
      dockerfile: docker/runner.dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - runner_data:/runner_data
    restart: always

  nginx:
    build:
      context: ".."
      dockerfile: docker/nginx.dockerfile
    ports:
      - "${APP_PORT}:80"
    depends_on:
      - web
      - runner
      - prometheus
    restart: always

  postgres:
    image: "postgres:14"
    restart: always
    volumes:
      - "${POSTGRES_VOLUME_BIND:-postgres_data:/var/lib/postgresql/data}"
    env_file:
      - ../.env

  redis:
    image: "redis:6"
    restart: always
    volumes:
      - redis_data:/data

  prometheus:
    build:
      context: ".."
      dockerfile: docker/prometheus.dockerfile
    restart: always
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - prometheus_data:/prometheus

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    restart: always
    ports:
      - "${CADVISOR_PORT}:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - "/dev/kmsg"
    privileged: true
    depends_on:
      - nginx

volumes:
  postgres_data:
  runner_data:
  redis_data:
  prometheus_data:
